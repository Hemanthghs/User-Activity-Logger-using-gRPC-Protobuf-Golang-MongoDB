syntax = "proto3";

package activity_pb;
option go_package = "/activity_pb";

message User {
    string name = 1;
    string email = 2;
    int64 phone = 3;
}

message UserRequest {
    User user = 1;
}

message UserResponse {
    string result = 1;
}

message Activity {
    string activitytype = 1;
    string timestamp = 2;
    int32 duration = 3;
    string label = 4;
    string email = 5;
}

message ActivityRequest {
    Activity activity = 1;
}

message ActivityResponse {
    string result = 1;
}

message ActivityIsValidRequest {
    string email = 1;
    string activitytype = 2;
}

message ActivityIsValidResponse {
    string result = 1;
}

message UpdateUserRequest {
    User user = 1;
}

message UpdateUserResponse {
    string result = 1;
}

message ActivityIsDoneRequest {
    string email = 1;
    string activitytype = 2;
}

message ActivityIsDoneResponse {
    string result = 1;
}

message GetUserRequest {
    string email = 1;
}

message GetUserResponse {
    bool status = 1;
    User user = 2;
}

message GetActivityRequest {
    string email = 1;
}

message GetActivityResponse {
    bool status = 1;
    Activity activity = 2;
}

message RemoveUserRequest {
    string email = 1;
}

message RemoveUserResponse {
    string result = 1;
}


service UserService {
    rpc UserAdd(UserRequest) returns (UserResponse) {};
    rpc ActivityAdd(ActivityRequest) returns (ActivityResponse) {};
    rpc ActivityIsValid(ActivityIsValidRequest) returns (ActivityIsValidResponse) {};
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {};
    rpc ActivityIsDone(ActivityIsDoneRequest) returns (ActivityIsDoneResponse) {};
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {};
    rpc GetActivity(GetActivityRequest) returns (GetActivityResponse) {};
    rpc RemoveUser(RemoveUserRequest) returns (RemoveUserResponse) {};
}


